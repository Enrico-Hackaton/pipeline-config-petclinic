apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: petclinic-ci-

spec:
  entrypoint: petclinic-ci
  serviceAccountName: argo
  arguments:
    parameters:
      - name: repo
        value: https://github.com/enrico2828/spring-petclinic.git
      - name: revision
        value: 'main'
  volumes:
    - name: mavencache
      hostPath:
        path: /tmp
        type: Directory
    - name: buildcontext
      emptyDir: {}


  templates:
  - name: petclinic-ci
    steps:
      - - name: maven-build
          template: maven-build
      - - name: image-build
          template: image-build
          arguments:
            artifacts:
              - name: buildcontext
                from: "{{steps.maven-build.outputs.artifacts.buildcontext}}"

  - name: maven-build
    inputs:
      artifacts:
        - name: source
          path: /work
          git:
            repo: "{{workflow.parameters.repo}}"
            revision: "{{workflow.parameters.revision}}"
    container:
      image: maven:3.8-adoptopenjdk-8
      command: ["/bin/sh", "-c"]
      args:
        - cd /work &&
          mvn clean package &&
          echo "Creating tar for build context ..." &&
          find . -regex '.*spring-petclinic.*\.jar' -o -regex '.*Dockerfile' | tar cvzf context.tar.gz --files-from - &&
          mv context.tar.gz /buildcontext/context.tar.gz
      volumeMounts:
        - mountPath: /root/.m2
          name: mavencache
        # argo k8sapi executor only allows artifacts from emptyDir volume
        - name: buildcontext
          mountPath: /buildcontext
    outputs:
      artifacts:
        - name: buildcontext
          path: /buildcontext/context.tar.gz

  - name: image-build
    inputs:
      artifacts:
        - name: buildcontext
          path: /buildcontext
    container:
      image: gcr.io/kaniko-project/executor:latest
      args:
        - "--dockerfile=Dockerfile"
        - "--context=tar:///buildcontext"
        - "--no-push"
